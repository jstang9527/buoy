// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pocsuite.proto

package grpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// PocRequest 请求结构
type PocRequest struct {
	Exploit              bool     `protobuf:"varint,1,opt,name=exploit,proto3" json:"exploit,omitempty"`
	Target               string   `protobuf:"bytes,2,opt,name=target,proto3" json:"target,omitempty"`
	Command              string   `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	AssetId              string   `protobuf:"bytes,4,opt,name=asset_id,json=assetId,proto3" json:"asset_id,omitempty"`
	PocPlugins           []string `protobuf:"bytes,5,rep,name=poc_plugins,json=pocPlugins,proto3" json:"poc_plugins,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PocRequest) Reset()         { *m = PocRequest{} }
func (m *PocRequest) String() string { return proto.CompactTextString(m) }
func (*PocRequest) ProtoMessage()    {}
func (*PocRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_881af80fb4044cbb, []int{0}
}

func (m *PocRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PocRequest.Unmarshal(m, b)
}
func (m *PocRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PocRequest.Marshal(b, m, deterministic)
}
func (m *PocRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PocRequest.Merge(m, src)
}
func (m *PocRequest) XXX_Size() int {
	return xxx_messageInfo_PocRequest.Size(m)
}
func (m *PocRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PocRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PocRequest proto.InternalMessageInfo

func (m *PocRequest) GetExploit() bool {
	if m != nil {
		return m.Exploit
	}
	return false
}

func (m *PocRequest) GetTarget() string {
	if m != nil {
		return m.Target
	}
	return ""
}

func (m *PocRequest) GetCommand() string {
	if m != nil {
		return m.Command
	}
	return ""
}

func (m *PocRequest) GetAssetId() string {
	if m != nil {
		return m.AssetId
	}
	return ""
}

func (m *PocRequest) GetPocPlugins() []string {
	if m != nil {
		return m.PocPlugins
	}
	return nil
}

// PocResponse 响应结构
type PocResponse struct {
	VerifyInfo           map[string]string `protobuf:"bytes,1,rep,name=VerifyInfo,proto3" json:"VerifyInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	ExploitInfo          map[string]string `protobuf:"bytes,2,rep,name=ExploitInfo,proto3" json:"ExploitInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	WebshellInfo         map[string]string `protobuf:"bytes,3,rep,name=WebshellInfo,proto3" json:"WebshellInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	TrojanInfo           map[string]string `protobuf:"bytes,4,rep,name=TrojanInfo,proto3" json:"TrojanInfo,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *PocResponse) Reset()         { *m = PocResponse{} }
func (m *PocResponse) String() string { return proto.CompactTextString(m) }
func (*PocResponse) ProtoMessage()    {}
func (*PocResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_881af80fb4044cbb, []int{1}
}

func (m *PocResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PocResponse.Unmarshal(m, b)
}
func (m *PocResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PocResponse.Marshal(b, m, deterministic)
}
func (m *PocResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PocResponse.Merge(m, src)
}
func (m *PocResponse) XXX_Size() int {
	return xxx_messageInfo_PocResponse.Size(m)
}
func (m *PocResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PocResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PocResponse proto.InternalMessageInfo

func (m *PocResponse) GetVerifyInfo() map[string]string {
	if m != nil {
		return m.VerifyInfo
	}
	return nil
}

func (m *PocResponse) GetExploitInfo() map[string]string {
	if m != nil {
		return m.ExploitInfo
	}
	return nil
}

func (m *PocResponse) GetWebshellInfo() map[string]string {
	if m != nil {
		return m.WebshellInfo
	}
	return nil
}

func (m *PocResponse) GetTrojanInfo() map[string]string {
	if m != nil {
		return m.TrojanInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*PocRequest)(nil), "grpc.PocRequest")
	proto.RegisterType((*PocResponse)(nil), "grpc.PocResponse")
	proto.RegisterMapType((map[string]string)(nil), "grpc.PocResponse.ExploitInfoEntry")
	proto.RegisterMapType((map[string]string)(nil), "grpc.PocResponse.TrojanInfoEntry")
	proto.RegisterMapType((map[string]string)(nil), "grpc.PocResponse.VerifyInfoEntry")
	proto.RegisterMapType((map[string]string)(nil), "grpc.PocResponse.WebshellInfoEntry")
}

func init() { proto.RegisterFile("pocsuite.proto", fileDescriptor_881af80fb4044cbb) }

var fileDescriptor_881af80fb4044cbb = []byte{
	// 369 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x93, 0x41, 0x4f, 0xc2, 0x30,
	0x1c, 0xc5, 0x1d, 0x1b, 0x03, 0xfe, 0x33, 0x02, 0x8d, 0x31, 0x93, 0x8b, 0x73, 0x5e, 0x76, 0x9a,
	0x09, 0x5e, 0x0c, 0x09, 0x1a, 0x8d, 0xc4, 0x70, 0x23, 0xd3, 0x68, 0xe2, 0x85, 0x8c, 0x52, 0x70,
	0x3a, 0xd6, 0xba, 0x76, 0x46, 0xbe, 0x87, 0x5f, 0xc0, 0x6f, 0x6a, 0xd6, 0x42, 0x98, 0x2c, 0x1e,
	0xb8, 0xed, 0xb5, 0xef, 0xfd, 0xb2, 0xf7, 0x6f, 0x0b, 0x07, 0x8c, 0x62, 0x9e, 0x45, 0x82, 0xf8,
	0x2c, 0xa5, 0x82, 0x22, 0x63, 0x9e, 0x32, 0xec, 0x7e, 0x6b, 0x00, 0x23, 0x8a, 0x03, 0xf2, 0x91,
	0x11, 0x2e, 0x90, 0x0d, 0x35, 0xf2, 0xc5, 0x62, 0x1a, 0x09, 0x5b, 0x73, 0x34, 0xaf, 0x1e, 0xac,
	0x25, 0x3a, 0x02, 0x53, 0x84, 0xe9, 0x9c, 0x08, 0xbb, 0xe2, 0x68, 0x5e, 0x23, 0x58, 0xa9, 0x3c,
	0x81, 0xe9, 0x62, 0x11, 0x26, 0x53, 0x5b, 0x97, 0x1b, 0x6b, 0x89, 0x8e, 0xa1, 0x1e, 0x72, 0x4e,
	0xc4, 0x38, 0x9a, 0xda, 0x86, 0xda, 0x92, 0x7a, 0x38, 0x45, 0x27, 0x60, 0x31, 0x8a, 0xc7, 0x2c,
	0xce, 0xe6, 0x51, 0xc2, 0xed, 0xaa, 0xa3, 0x7b, 0x8d, 0x00, 0x18, 0xc5, 0x23, 0xb5, 0xe2, 0xfe,
	0x18, 0x60, 0xc9, 0xdf, 0xe2, 0x8c, 0x26, 0x9c, 0xa0, 0x1b, 0x80, 0x27, 0x92, 0x46, 0xb3, 0xe5,
	0x30, 0x99, 0x51, 0x5b, 0x73, 0x74, 0xcf, 0xea, 0x9e, 0xfa, 0x79, 0x03, 0xbf, 0x60, 0xf3, 0x37,
	0x9e, 0x41, 0x22, 0xd2, 0x65, 0x50, 0x08, 0xa1, 0x3b, 0xb0, 0x06, 0xaa, 0x8b, 0x64, 0x54, 0x24,
	0xc3, 0x2d, 0x33, 0x0a, 0x26, 0x05, 0x29, 0xc6, 0xd0, 0x3d, 0xec, 0x3f, 0x93, 0x09, 0x7f, 0x25,
	0x71, 0x2c, 0x31, 0xba, 0xc4, 0x9c, 0x95, 0x31, 0x45, 0x97, 0xe2, 0xfc, 0x09, 0xe6, 0x8d, 0x1e,
	0x53, 0xfa, 0x16, 0x26, 0x12, 0x63, 0xfc, 0xd7, 0x68, 0xe3, 0x59, 0x35, 0xda, 0x2c, 0x74, 0xfa,
	0xd0, 0xdc, 0x2a, 0x8c, 0x5a, 0xa0, 0xbf, 0x93, 0xa5, 0x3c, 0xbb, 0x46, 0x90, 0x7f, 0xa2, 0x43,
	0xa8, 0x7e, 0x86, 0x71, 0x46, 0x56, 0xc7, 0xa6, 0x44, 0xaf, 0x72, 0xa9, 0x75, 0xae, 0xa0, 0xb5,
	0xdd, 0x75, 0xa7, 0xfc, 0x35, 0xb4, 0x4b, 0x25, 0x77, 0x02, 0xf4, 0xa1, 0xb9, 0x55, 0x6f, 0x97,
	0x78, 0xb7, 0x07, 0xb5, 0x11, 0xc5, 0x0f, 0x38, 0x4c, 0xd0, 0x39, 0x98, 0x6a, 0x12, 0xa8, 0x55,
	0x18, 0xa1, 0xbc, 0xd2, 0x9d, 0x76, 0x69, 0xa8, 0xee, 0xde, 0xad, 0xf9, 0x22, 0xaf, 0xff, 0xc4,
	0x94, 0x6f, 0xe1, 0xe2, 0x37, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x47, 0xf7, 0x70, 0x1d, 0x03, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PocScanClient is the client API for PocScan service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PocScanClient interface {
	// 定义验证方法
	Verify(ctx context.Context, in *PocRequest, opts ...grpc.CallOption) (*PocResponse, error)
}

type pocScanClient struct {
	cc *grpc.ClientConn
}

func NewPocScanClient(cc *grpc.ClientConn) PocScanClient {
	return &pocScanClient{cc}
}

func (c *pocScanClient) Verify(ctx context.Context, in *PocRequest, opts ...grpc.CallOption) (*PocResponse, error) {
	out := new(PocResponse)
	err := c.cc.Invoke(ctx, "/grpc.PocScan/Verify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PocScanServer is the server API for PocScan service.
type PocScanServer interface {
	// 定义验证方法
	Verify(context.Context, *PocRequest) (*PocResponse, error)
}

// UnimplementedPocScanServer can be embedded to have forward compatible implementations.
type UnimplementedPocScanServer struct {
}

func (*UnimplementedPocScanServer) Verify(ctx context.Context, req *PocRequest) (*PocResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Verify not implemented")
}

func RegisterPocScanServer(s *grpc.Server, srv PocScanServer) {
	s.RegisterService(&_PocScan_serviceDesc, srv)
}

func _PocScan_Verify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PocRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PocScanServer).Verify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.PocScan/Verify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PocScanServer).Verify(ctx, req.(*PocRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PocScan_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.PocScan",
	HandlerType: (*PocScanServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Verify",
			Handler:    _PocScan_Verify_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pocsuite.proto",
}
